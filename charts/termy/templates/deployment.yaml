apiVersion: v1
kind: ServiceAccount
metadata:
  name: termy-service-account
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: termy-role-binding
subjects:
- kind: ServiceAccount
  name: termy-service-account
roleRef:
  kind: ClusterRole
  name: admin
---
apiVersion: v1
kind: Secret
metadata:
  name: termy-secrets
type: Opaque
stringData:
  supw: {{ required "supw is required" .Values.supw }}
---
kind: Service
apiVersion: v1
metadata:
  name: termy-svc
  labels:
    app: termy
spec:
  selector:
    app: termy
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
{{- if .Values.clusterIssuer }}
---
apiVersion: certmanager.k8s.io/v1alpha1
kind: Certificate
metadata:
  name: termy-crt
spec:
  secretName: termy-crt
  dnsNames:
  - {{ required "hostname is required" .Values.hostname }}
  acme:
    config:
    - http01:
        ingressClass: nginx
      domains:
      - {{ required "hostname is required" .Values.hostname }}
  issuerRef:
    name: {{ .Values.clusterIssuer }}
    kind: ClusterIssuer
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: termy-in
  labels:
    app: termy
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
spec:
  rules:
  - host: {{ required "hostname is required" .Values.hostname }}
    http:
      paths:
      - backend:
          serviceName: termy-svc
          servicePort: 80
  tls:
  - secretName: termy-crt
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    app: termy
    app.kubernetes.io/name: {{ include "chart.name" . }}
    helm.sh/chart: {{ include "chart.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: termy
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: termy
  template:
    metadata:
      labels:
        app: termy
    spec:
      serviceAccountName: termy-service-account
      containers:
      - name: termy
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: secrets
          readOnly: true
          mountPath: /etc/secrets
        env:
        - name: TERMY_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: TERMY_HOSTNAME
          value: {{ required "hostname is required" .Values.hostname }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: secrets
        secret:
          secretName: termy-secrets